/*

Copyright 2018 This Project Authors.

Author:  seanchann <seanchann@foxmail.com>

See docs/ for more information about the  project.

*/

package swaggerdoc

import (
	"fmt"
	"io"
	"io/ioutil"
	"os"

	"k8s.io/apimachinery/pkg/runtime"

	"k8s.io/klog"
	"github.com/seanchann/apimaster/pkg/swaggerdoc/options"
)

//GenerateDoc generate swagger doc by options
// visit https://github.com/emicklei/go-restful-swagger12 for detail
func GenerateDoc(o *options.SwaggerDocOptions) {
	if o.TypeSrc == "" {
		klog.Fatalf("Please define -s flag as it is the source file")
	}

	var funcOut io.Writer
	if o.FunctionDest == "-" {
		funcOut = os.Stdout
	} else {
		file, err := os.Create(o.FunctionDest)
		if err != nil {
			klog.Fatalf("Couldn't open %v: %v", o.FunctionDest, err)
		}
		defer file.Close()
		funcOut = file
	}

	if o.HeaderFile != "" {

		b, err := ioutil.ReadFile(o.HeaderFile)
		if err != nil {
			klog.Fatalf("Error input header file %s\n", err)
		}

		io.WriteString(funcOut, string(b))
	}

	if len(o.Package) != 0 {
		packageline := fmt.Sprintf("package %s", o.Package)
		io.WriteString(funcOut, packageline)
	} else {
		klog.Fatalf("Error invalid package name")
	}

	comment := `
// This file contains a collection of methods that can be used from go-restful to
// generate Swagger API documentation for its models. Please read this PR for more
// information on the implementation: https://github.com/emicklei/go-restful/pull/215
//
// TODOs are ignored from the parser (e.g. TODO(andronat):... || TODO:...) if and only if
// they are on one line! For multiple line or blocks that you want to ignore use ---.
// Any context after a --- is ignored.
//
// Those methods can be generated by using hack/update-generated-swagger-docs.sh
// AUTO-GENERATED FUNCTIONS START HERE. DO NOT EDIT.
	`
	io.WriteString(funcOut, comment)

	docsForTypes := runtime.ParseDocumentationFrom(o.TypeSrc)

	if o.Verify == true {
		rc, err := runtime.VerifySwaggerDocsExist(docsForTypes, funcOut)
		if err != nil {
			fmt.Fprintf(os.Stderr, "Error in verification process: %s\n", err)
		}
		os.Exit(rc)
	}

	if docsForTypes != nil && len(docsForTypes) > 0 {
		if err := runtime.WriteSwaggerDocFunc(docsForTypes, funcOut); err != nil {
			fmt.Fprintf(os.Stderr, "Error when writing swagger documentation functions: %s\n", err)
			os.Exit(-1)
		}
	}

	endline := `
// AUTO-GENERATED FUNCTIONS END HERE
	`
	io.WriteString(funcOut, endline)
}
